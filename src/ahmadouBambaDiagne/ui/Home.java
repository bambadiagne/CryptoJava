/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ahmadouBambaDiagne.ui;

import java.awt.CardLayout;
import java.awt.LayoutManager;
import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.plaf.basic.BasicTabbedPaneUI;
import ahmadouBambaDiagne.crypto.genkey.SymetricGenKey;
import ahmadouBambaDiagne.crypto.genkey.AsymetricGenKey;
import ahmadouBambaDiagne.crypto.ciphers.SymetricCipher;
import ahmadouBambaDiagne.crypto.ciphers.AsymetricCipher;
import java.awt.Color;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JOptionPane;
import java.awt.Toolkit;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.ClipboardOwner;
import java.awt.datatransfer.StringSelection;
import java.awt.datatransfer.Transferable;
import java.security.interfaces.RSAPrivateKey;
import java.security.interfaces.RSAPublicKey;
import javax.crypto.SecretKey;

/**
 *
 * @author hp
 */
public class Home extends javax.swing.JFrame {

    /**
     * Creates new form Home
     */
    public Home() {
        initComponents();
        this.initDSAKeySize();
        this.fileChooser = new JFileChooser();

    }

    public final void initDSAKeySize() {
        int start = 512;
        int keyLength = start / 64 + 1;
        this.DSAKeySize = new String[keyLength];
        for (int i = 0; i < keyLength; i++) {
            this.DSAKeySize[i] = Integer.toString(start + i * 64);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroup2 = new javax.swing.ButtonGroup();
        this.buttonGroup2.add(this.JRadioAES);
        this.buttonGroup2.add(this.JRadioDES);
        buttonGroup1 = new javax.swing.ButtonGroup();
        this.buttonGroup1.add(this.JRadioRSA);
        this.buttonGroup1.add(this.JRadioDSA);
        buttonGroup3 = new javax.swing.ButtonGroup();
        buttonGroup4 = new javax.swing.ButtonGroup();
        buttonGroup5 = new javax.swing.ButtonGroup();
        buttonGroup6 = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        JRetour = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        JRadioAES = new javax.swing.JRadioButton();
        JRadioDES = new javax.swing.JRadioButton();
        jPanel9 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jPanel12 = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();
        jPanel10 = new javax.swing.JPanel();
        jButton4 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        aSyncGenKey = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        JRetour1 = new javax.swing.JButton();
        jPanel14 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        JRadioRSA = new javax.swing.JRadioButton();
        JRadioDSA = new javax.swing.JRadioButton();
        jPanel15 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        jPanel17 = new javax.swing.JPanel();
        jButtonAsyncGenKey = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jPanel19 = new javax.swing.JPanel();
        jPanel16 = new javax.swing.JPanel();
        jPanel23 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        jRadioFichier = new javax.swing.JRadioButton();
        jRadioTexte = new javax.swing.JRadioButton();
        jPanel24 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jRadioSync = new javax.swing.JRadioButton();
        jRadioAsync = new javax.swing.JRadioButton();
        jPanel18 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jComboBox3 = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButtonUpload1 = new javax.swing.JButton();
        jButtonCipher = new javax.swing.JButton();
        jPanel21 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jButtonUploadKey = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextArea4 = new javax.swing.JTextArea();
        jPanel22 = new javax.swing.JPanel();
        jPanel20 = new javax.swing.JPanel();
        jPanel25 = new javax.swing.JPanel();
        jPanel29 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jPanel31 = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        jRadioFichier1 = new javax.swing.JRadioButton();
        jRadioTexte1 = new javax.swing.JRadioButton();
        jPanel30 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jRadioDSync1 = new javax.swing.JRadioButton();
        jRadioDAsync1 = new javax.swing.JRadioButton();
        jPanel26 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        jComboBox4 = new javax.swing.JComboBox<>();
        jButtonDecrypt = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea3 = new javax.swing.JTextArea();
        jButtonUpload2 = new javax.swing.JButton();
        jPanel27 = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTextArea5 = new javax.swing.JTextArea();
        jLabel20 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTextArea6 = new javax.swing.JTextArea();
        jButtonUploadKey2 = new javax.swing.JButton();
        jPanel28 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();

        this.buttonGroup3.add(this.jRadioSync);
        this.buttonGroup3.add(this.jRadioAsync);

        this.buttonGroup4.add(this.jRadioDSync1);
        this.buttonGroup4.add(this.jRadioDAsync1);

        buttonGroup5.add(jRadioTexte);
        buttonGroup5.add(jRadioFichier);

        buttonGroup6.add(jRadioTexte1);
        buttonGroup6.add(jRadioFichier1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(46, 60, 126));
        setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N

        jTabbedPane1.setUI(new SpacedTabbedPaneUI());
        jTabbedPane1.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        jTabbedPane1.setPreferredSize(new java.awt.Dimension(1300, 600));

        jPanel1.setBackground(new java.awt.Color(251, 234, 235));
        jPanel1.setForeground(new java.awt.Color(30, 187, 215));
        jPanel1.setLayout(new java.awt.CardLayout());

        jPanel6.setBackground(new java.awt.Color(251, 234, 235));
        jPanel6.setLayout(new java.awt.GridBagLayout());

        jButton2.setBackground(new java.awt.Color(46, 60, 126));
        jButton2.setFont(new java.awt.Font("Trebuchet MS", 1, 18)); // NOI18N
        jButton2.setForeground(new java.awt.Color(251, 234, 235));
        jButton2.setText("SYMETRIQUE");
        jButton2.setBorderPainted(false);
        jButton2.setPreferredSize(new java.awt.Dimension(200, 60));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 126;
        gridBagConstraints.ipady = 64;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(264, 233, 477, 0);
        jPanel6.add(jButton2, gridBagConstraints);

        jButton1.setBackground(new java.awt.Color(46, 60, 126));
        jButton1.setFont(new java.awt.Font("Trebuchet MS", 1, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(251, 234, 235));
        jButton1.setText("ASYMETRIQUE");
        jButton1.setPreferredSize(new java.awt.Dimension(200, 60));
        jButton1.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/static/cipher.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 102;
        gridBagConstraints.ipady = 64;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(264, 70, 477, 394);
        jPanel6.add(jButton1, gridBagConstraints);

        jPanel1.add(jPanel6, "card4");

        jPanel4.setBackground(new java.awt.Color(46, 60, 126));
        jPanel4.setLayout(new java.awt.GridLayout(4, 1));

        jPanel7.setBackground(new java.awt.Color(251, 234, 235));
        jPanel7.setPreferredSize(new java.awt.Dimension(565, 114));

        jLabel2.setFont(new java.awt.Font("Trebuchet MS", 1, 20)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(46, 60, 126));
        jLabel2.setText("GENERATION DE CLES SYMETRIQUE(AES, DES)");

        JRetour.setBackground(new java.awt.Color(46, 60, 126));
        JRetour.setIcon(new javax.swing.ImageIcon(getClass().getResource("/static/retour2.png"))); // NOI18N
        JRetour.setPreferredSize(new java.awt.Dimension(128, 128));
        JRetour.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JRetourActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(46, 60, 126));
        jLabel3.setText("Choix de l'algorithme");

        JRadioAES.setBackground(new java.awt.Color(251, 234, 235));
        JRadioAES.setForeground(new java.awt.Color(46, 60, 126));
        JRadioAES.setSelected(true);
        JRadioAES.setText("AES");
        JRadioAES.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JRadioAESActionPerformed(evt);
            }
        });

        JRadioDES.setBackground(new java.awt.Color(251, 234, 235));
        JRadioDES.setForeground(new java.awt.Color(46, 60, 126));
        JRadioDES.setText("DES");
        JRadioDES.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JRadioDESActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(JRetour, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(272, 272, 272)
                .addComponent(jLabel2)
                .addGap(357, 357, 357))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addGap(0, 0, 0)
                .addComponent(JRadioAES)
                .addGap(0, 0, 0)
                .addComponent(JRadioDES)
                .addGap(443, 443, 443))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(JRetour, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(jLabel3))
                    .addComponent(JRadioAES)
                    .addComponent(JRadioDES))
                .addGap(41, 41, 41))
        );

        jPanel4.add(jPanel7);

        jPanel9.setBackground(new java.awt.Color(251, 234, 235));
        jPanel9.setLayout(new java.awt.GridLayout(2, 1));

        jPanel11.setBackground(new java.awt.Color(251, 234, 235));

        jLabel4.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(46, 60, 126));
        jLabel4.setText("Taille de la clé");
        jPanel11.add(jLabel4);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "128", "192", "256" }));
        jComboBox1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel11.add(jComboBox1);

        jLabel5.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(46, 60, 126));
        jLabel5.setText("bits");
        jPanel11.add(jLabel5);

        jPanel9.add(jPanel11);

        jPanel12.setBackground(new java.awt.Color(251, 234, 235));
        jPanel12.setLayout(new java.awt.GridBagLayout());

        jButton3.setBackground(new java.awt.Color(46, 60, 126));
        jButton3.setFont(new java.awt.Font("Trebuchet MS", 1, 18)); // NOI18N
        jButton3.setForeground(new java.awt.Color(251, 234, 235));
        jButton3.setText("GENERER LA CLÉ");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 69;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(41, 517, 35, 454);
        jPanel12.add(jButton3, gridBagConstraints);

        jPanel9.add(jPanel12);

        jPanel4.add(jPanel9);

        jPanel10.setBackground(new java.awt.Color(251, 234, 235));
        jPanel10.setLayout(new java.awt.GridBagLayout());

        jButton4.setBackground(new java.awt.Color(46, 60, 126));
        jButton4.setFont(new java.awt.Font("Trebuchet MS", 1, 18)); // NOI18N
        jButton4.setForeground(new java.awt.Color(251, 234, 235));
        jButton4.setText("CACHER LA CLÉ");
        jButton4.setEnabled(false);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        //this.jButton4.setVisible(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 78;
        gridBagConstraints.ipady = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(50, 14, 0, 0);
        jPanel10.add(jButton4, gridBagConstraints);

        jTextField1.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jTextField1.setEnabled(false);
        jTextField1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextField1MouseClicked(evt);
            }
        });
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        //jTextField1.setVisible(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 408;
        gridBagConstraints.ipady = 31;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(40, 64, 113, 421);
        jPanel10.add(jTextField1, gridBagConstraints);

        jPanel4.add(jPanel10);

        jPanel1.add(jPanel4, "card2");

        aSyncGenKey.setBackground(new java.awt.Color(251, 234, 235));

        jPanel13.setBackground(new java.awt.Color(251, 234, 235));
        jPanel13.setMinimumSize(new java.awt.Dimension(1211, 183));

        jLabel6.setFont(new java.awt.Font("Trebuchet MS", 1, 20)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(46, 60, 126));
        jLabel6.setText("GENERATION DE CLES SYMETRIQUE(RSA | DSA)");

        JRetour1.setBackground(new java.awt.Color(46, 60, 126));
        JRetour1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/static/retour2.png"))); // NOI18N
        JRetour1.setPreferredSize(new java.awt.Dimension(128, 128));
        JRetour1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JRetour1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(JRetour1, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(201, 201, 201)
                .addComponent(jLabel6))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(JRetour1, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jLabel6))
        );

        jPanel14.setBackground(new java.awt.Color(251, 234, 235));

        jLabel7.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(46, 60, 126));
        jLabel7.setText("Choix de l'algorithme");
        jPanel14.add(jLabel7);

        JRadioRSA.setBackground(new java.awt.Color(251, 234, 235));
        JRadioRSA.setForeground(new java.awt.Color(46, 60, 126));
        JRadioRSA.setSelected(true);
        JRadioRSA.setText("RSA");
        JRadioRSA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JRadioRSAActionPerformed(evt);
            }
        });
        jPanel14.add(JRadioRSA);

        JRadioDSA.setBackground(new java.awt.Color(251, 234, 235));
        JRadioDSA.setForeground(new java.awt.Color(46, 60, 126));
        JRadioDSA.setText("DSA");
        JRadioDSA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JRadioDSAActionPerformed(evt);
            }
        });
        jPanel14.add(JRadioDSA);

        jPanel15.setBackground(new java.awt.Color(251, 234, 235));
        jPanel15.setLayout(new java.awt.GridLayout(2, 1, 0, 2));

        jPanel5.setBackground(new java.awt.Color(251, 234, 235));
        jPanel5.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 30, 10));

        jLabel8.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(46, 60, 126));
        jLabel8.setText("Taille de la clé");
        jPanel5.add(jLabel8);

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1024", "2048", "4096" }));
        jComboBox2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel5.add(jComboBox2);

        jLabel9.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(46, 60, 126));
        jLabel9.setText("bits");
        jPanel5.add(jLabel9);

        jPanel15.add(jPanel5);

        jPanel17.setBackground(new java.awt.Color(251, 234, 235));
        jPanel17.setLayout(new java.awt.GridBagLayout());

        jButtonAsyncGenKey.setBackground(new java.awt.Color(46, 60, 126));
        jButtonAsyncGenKey.setFont(new java.awt.Font("Trebuchet MS", 1, 18)); // NOI18N
        jButtonAsyncGenKey.setForeground(new java.awt.Color(251, 234, 235));
        jButtonAsyncGenKey.setText("GENERER UNE PAIRE DE CLÉ");
        jButtonAsyncGenKey.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAsyncGenKeyActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 67;
        gridBagConstraints.ipady = 11;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 478, 104, 402);
        jPanel17.add(jButtonAsyncGenKey, gridBagConstraints);

        jPanel15.add(jPanel17);

        javax.swing.GroupLayout aSyncGenKeyLayout = new javax.swing.GroupLayout(aSyncGenKey);
        aSyncGenKey.setLayout(aSyncGenKeyLayout);
        aSyncGenKeyLayout.setHorizontalGroup(
            aSyncGenKeyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, 1211, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        aSyncGenKeyLayout.setVerticalGroup(
            aSyncGenKeyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(aSyncGenKeyLayout.createSequentialGroup()
                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel1.add(aSyncGenKey, "card3");

        jTabbedPane1.addTab("Generation de clés", new javax.swing.ImageIcon(getClass().getResource("/static/keygen.png")), jPanel1); // NOI18N

        jPanel2.setBackground(new java.awt.Color(251, 234, 235));
        jPanel2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel2.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        jPanel2.setPreferredSize(new java.awt.Dimension(1300, 833));
        jPanel2.setLayout(new java.awt.GridLayout(1, 2));

        jPanel19.setBackground(new java.awt.Color(251, 234, 235));
        jPanel19.setLayout(new java.awt.GridLayout(4, 1, 0, 3));

        jPanel16.setBackground(new java.awt.Color(251, 234, 235));
        jPanel16.setLayout(new java.awt.GridLayout(2, 1));

        jPanel23.setBackground(new java.awt.Color(251, 234, 235));
        jPanel23.setLayout(new java.awt.GridLayout(2, 1));

        jLabel1.setFont(new java.awt.Font("Trebuchet MS", 1, 20)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(46, 60, 126));
        jLabel1.setText("CHIFFREMENT");
        jPanel23.add(jLabel1);

        jPanel8.setBackground(new java.awt.Color(251, 234, 235));
        jPanel8.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jLabel21.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(46, 60, 126));
        jLabel21.setText("Type de document");
        jPanel8.add(jLabel21);

        jRadioFichier.setBackground(new java.awt.Color(251, 234, 235));
        jRadioFichier.setText("fichier");
        jRadioFichier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioFichierActionPerformed(evt);
            }
        });
        jPanel8.add(jRadioFichier);

        jRadioTexte.setBackground(new java.awt.Color(251, 234, 235));
        jRadioTexte.setSelected(true);
        jRadioTexte.setText("texte");
        jRadioTexte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioTexteActionPerformed(evt);
            }
        });
        jPanel8.add(jRadioTexte);

        jPanel23.add(jPanel8);

        jPanel16.add(jPanel23);

        jPanel24.setBackground(new java.awt.Color(251, 234, 235));
        jPanel24.setForeground(new java.awt.Color(46, 60, 126));
        jPanel24.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 40));

        jLabel10.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(46, 60, 126));
        jLabel10.setText("Type de chiffrement");
        jPanel24.add(jLabel10);

        jRadioSync.setBackground(new java.awt.Color(251, 234, 235));
        jRadioSync.setForeground(new java.awt.Color(46, 60, 126));
        jRadioSync.setText("Symetrique");
        jRadioSync.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioSyncActionPerformed(evt);
            }
        });
        jPanel24.add(jRadioSync);

        jRadioAsync.setBackground(new java.awt.Color(251, 234, 235));
        jRadioAsync.setForeground(new java.awt.Color(46, 60, 126));
        jRadioAsync.setText("Asymetrique");
        jRadioAsync.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioAsyncActionPerformed(evt);
            }
        });
        jPanel24.add(jRadioAsync);

        jPanel16.add(jPanel24);

        jPanel19.add(jPanel16);

        jPanel18.setBackground(new java.awt.Color(251, 234, 235));

        jLabel14.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(46, 60, 126));
        jLabel14.setText("Algorithme");

        jLabel13.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(46, 60, 126));
        jLabel13.setText("Texte à chiffrer");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextArea1KeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(jTextArea1);

        jButtonUpload1.setBackground(new java.awt.Color(46, 60, 126));
        jButtonUpload1.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        jButtonUpload1.setForeground(new java.awt.Color(251, 234, 235));
        jButtonUpload1.setText("Choisir un fichier");
        jButtonUpload1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButtonUpload1.setEnabled(false);
        jButtonUpload1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUpload1ActionPerformed(evt);
            }
        });

        jButtonCipher.setBackground(new java.awt.Color(46, 60, 126));
        jButtonCipher.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jButtonCipher.setForeground(new java.awt.Color(251, 234, 235));
        jButtonCipher.setText("CHIFFRER");
        jButtonCipher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCipherActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel18Layout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addGap(31, 31, 31)
                        .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(68, 68, 68)
                        .addComponent(jButtonCipher, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel18Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13)
                            .addGroup(jPanel18Layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 431, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonUpload1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(67, 67, 67))
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonCipher))
                .addGap(17, 17, 17)
                .addComponent(jLabel13)
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel18Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel18Layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(jButtonUpload1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );

        jPanel19.add(jPanel18);

        jPanel21.setBackground(new java.awt.Color(251, 234, 235));
        jPanel21.setAutoscrolls(true);

        jLabel15.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(46, 60, 126));
        jLabel15.setText("Entrer la clé (en base64)");

        jTextArea2.setColumns(20);
        jTextArea2.setRows(8);
        jTextArea2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextArea2MouseClicked(evt);
            }
        });
        jTextArea2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextArea2KeyPressed(evt);
            }
        });
        jScrollPane2.setViewportView(jTextArea2);

        jButtonUploadKey.setBackground(new java.awt.Color(46, 60, 126));
        jButtonUploadKey.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        jButtonUploadKey.setForeground(new java.awt.Color(251, 234, 235));
        jButtonUploadKey.setText("Charger une clé");
        jButtonUploadKey.setEnabled(false);
        jButtonUploadKey.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUploadKeyActionPerformed(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(46, 60, 126));
        jLabel16.setText("Texte chiffré(en base64)");

        jTextArea4.setColumns(20);
        jTextArea4.setRows(5);
        jTextArea4.setDisabledTextColor(Color.BLACK);
        jTextArea4.setEnabled(false);
        jTextArea4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextArea4MouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(jTextArea4);

        javax.swing.GroupLayout jPanel21Layout = new javax.swing.GroupLayout(jPanel21);
        jPanel21.setLayout(jPanel21Layout);
        jPanel21Layout.setHorizontalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel15)
                    .addGroup(jPanel21Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 392, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonUploadKey, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel16)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 429, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(86, Short.MAX_VALUE))
        );
        jPanel21Layout.setVerticalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButtonUploadKey, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        jPanel19.add(jPanel21);

        jPanel22.setBackground(new java.awt.Color(251, 234, 235));

        javax.swing.GroupLayout jPanel22Layout = new javax.swing.GroupLayout(jPanel22);
        jPanel22.setLayout(jPanel22Layout);
        jPanel22Layout.setHorizontalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 650, Short.MAX_VALUE)
        );
        jPanel22Layout.setVerticalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 206, Short.MAX_VALUE)
        );

        jPanel19.add(jPanel22);

        jPanel2.add(jPanel19);

        jPanel20.setBackground(new java.awt.Color(251, 234, 235));
        jPanel20.setLayout(new java.awt.GridLayout(4, 1));

        jPanel25.setBackground(new java.awt.Color(251, 234, 235));
        jPanel25.setLayout(new java.awt.GridLayout(2, 1));

        jPanel29.setBackground(new java.awt.Color(251, 234, 235));
        jPanel29.setLayout(new java.awt.GridLayout(2, 1, 20, 0));

        jLabel11.setFont(new java.awt.Font("Trebuchet MS", 1, 20)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(46, 60, 126));
        jLabel11.setText("DECHIFFREMENT");
        jPanel29.add(jLabel11);

        jPanel31.setBackground(new java.awt.Color(251, 234, 235));
        jPanel31.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jLabel22.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(46, 60, 126));
        jLabel22.setText("Type de document");
        jPanel31.add(jLabel22);

        jRadioFichier1.setBackground(new java.awt.Color(251, 234, 235));
        jRadioFichier1.setText("fichier");
        jRadioFichier1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioFichier1ActionPerformed(evt);
            }
        });
        jPanel31.add(jRadioFichier1);

        jRadioTexte1.setBackground(new java.awt.Color(251, 234, 235));
        jRadioTexte1.setSelected(true);
        jRadioTexte1.setText("texte");
        jRadioTexte1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioTexte1ActionPerformed(evt);
            }
        });
        jPanel31.add(jRadioTexte1);

        jPanel29.add(jPanel31);

        jPanel25.add(jPanel29);

        jPanel30.setBackground(new java.awt.Color(251, 234, 235));
        jPanel30.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 40));

        jLabel12.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(46, 60, 126));
        jLabel12.setText("Type de chiffrement");
        jPanel30.add(jLabel12);

        jRadioDSync1.setBackground(new java.awt.Color(251, 234, 235));
        jRadioDSync1.setForeground(new java.awt.Color(46, 60, 126));
        jRadioDSync1.setText("Symetrique");
        jRadioDSync1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioDSync1ActionPerformed(evt);
            }
        });
        jPanel30.add(jRadioDSync1);

        jRadioDAsync1.setBackground(new java.awt.Color(251, 234, 235));
        jRadioDAsync1.setForeground(new java.awt.Color(46, 60, 126));
        jRadioDAsync1.setText("Asymetrique");
        jRadioDAsync1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioDAsync1ActionPerformed(evt);
            }
        });
        jPanel30.add(jRadioDAsync1);

        jPanel25.add(jPanel30);

        jPanel20.add(jPanel25);

        jPanel26.setBackground(new java.awt.Color(251, 234, 235));

        jLabel17.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(46, 60, 126));
        jLabel17.setText("Algorithme");

        jButtonDecrypt.setBackground(new java.awt.Color(46, 60, 126));
        jButtonDecrypt.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jButtonDecrypt.setForeground(new java.awt.Color(251, 234, 235));
        jButtonDecrypt.setText("DECHIFFRER");
        jButtonDecrypt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDecryptActionPerformed(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(46, 60, 126));
        jLabel18.setText("Texte chiffré");

        jTextArea3.setColumns(20);
        jTextArea3.setRows(5);
        jTextArea3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextArea3KeyPressed(evt);
            }
        });
        jScrollPane3.setViewportView(jTextArea3);

        jButtonUpload2.setBackground(new java.awt.Color(46, 60, 126));
        jButtonUpload2.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        jButtonUpload2.setForeground(new java.awt.Color(251, 234, 235));
        jButtonUpload2.setText("Choisir un fichier");
        jButtonUpload2.setEnabled(false);
        jButtonUpload2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUpload2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel26Layout = new javax.swing.GroupLayout(jPanel26);
        jPanel26.setLayout(jPanel26Layout);
        jPanel26Layout.setHorizontalGroup(
            jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel26Layout.createSequentialGroup()
                .addGroup(jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel26Layout.createSequentialGroup()
                        .addComponent(jLabel17)
                        .addGap(31, 31, 31)
                        .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(68, 68, 68)
                        .addComponent(jButtonDecrypt, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel26Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel18)
                            .addGroup(jPanel26Layout.createSequentialGroup()
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 431, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButtonUpload2, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(42, 42, 42))
        );
        jPanel26Layout.setVerticalGroup(
            jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel26Layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addGroup(jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonDecrypt))
                .addGap(17, 17, 17)
                .addComponent(jLabel18)
                .addGroup(jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel26Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel26Layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(jButtonUpload2, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );

        jPanel20.add(jPanel26);

        jPanel27.setBackground(new java.awt.Color(251, 234, 235));

        jLabel19.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(46, 60, 126));
        jLabel19.setText("Entrer la clé (en base64)");

        jTextArea5.setColumns(20);
        jTextArea5.setRows(5);
        jTextArea5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextArea5MouseClicked(evt);
            }
        });
        jTextArea5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextArea5KeyPressed(evt);
            }
        });
        jScrollPane5.setViewportView(jTextArea5);

        jLabel20.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(46, 60, 126));
        jLabel20.setText("Texte en clair");

        jTextArea6.setColumns(20);
        jTextArea6.setRows(5);
        jTextArea6.setEnabled(false);
        jTextArea6.setDisabledTextColor(Color.BLACK);
        jTextArea6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextArea6MouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(jTextArea6);

        jButtonUploadKey2.setBackground(new java.awt.Color(46, 60, 126));
        jButtonUploadKey2.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        jButtonUploadKey2.setForeground(new java.awt.Color(251, 234, 235));
        jButtonUploadKey2.setText("Charger une clé");
        jButtonUploadKey2.setEnabled(false);
        jButtonUploadKey2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUploadKey2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel27Layout = new javax.swing.GroupLayout(jPanel27);
        jPanel27.setLayout(jPanel27Layout);
        jPanel27Layout.setHorizontalGroup(
            jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel27Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel19)
                    .addGroup(jPanel27Layout.createSequentialGroup()
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 392, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonUploadKey2, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel20)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 429, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(67, Short.MAX_VALUE))
        );
        jPanel27Layout.setVerticalGroup(
            jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel27Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(jLabel19)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButtonUploadKey2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel20)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        jPanel20.add(jPanel27);

        jPanel28.setBackground(new java.awt.Color(251, 234, 235));

        javax.swing.GroupLayout jPanel28Layout = new javax.swing.GroupLayout(jPanel28);
        jPanel28.setLayout(jPanel28Layout);
        jPanel28Layout.setHorizontalGroup(
            jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel28Layout.setVerticalGroup(
            jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jPanel20.add(jPanel28);

        jPanel2.add(jPanel20);

        jTabbedPane1.addTab("Chiffrement", new javax.swing.ImageIcon(getClass().getResource("/static/cipher.png")), jPanel2); // NOI18N

        jPanel3.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 2600, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 833, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Signature", new javax.swing.ImageIcon(getClass().getResource("/static/signature.png")), jPanel3); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1211, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 874, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jTabbedPane1.getAccessibleContext().setAccessibleName("Generation de clés");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        CardLayout cl = (CardLayout) (this.jPanel1.getLayout());

        cl.show(this.jPanel1, "card2");
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        CardLayout cl = (CardLayout) (this.jPanel1.getLayout());

        cl.show(this.jPanel1, "card3");
    }//GEN-LAST:event_jButton1ActionPerformed

    private void JRadioDESActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JRadioDESActionPerformed
        this.jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"56"}));
        this.JRadioAES.setSelected(false);
        this.JRadioDES.setSelected(true);
    }//GEN-LAST:event_JRadioDESActionPerformed

    private void JRadioAESActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JRadioAESActionPerformed
        this.jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"128", "192", "256"}));
        this.JRadioAES.setSelected(true);
        this.JRadioDES.setSelected(false);
    }//GEN-LAST:event_JRadioAESActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        String chosenAlgorithm;
        if (this.JRadioAES.isSelected()) {
            chosenAlgorithm = "AES";
        } else {
            chosenAlgorithm = "DES";
        }
        String bitsLength = this.jComboBox1.getSelectedItem().toString();
        int res = fileChooser.showSaveDialog(this);
        if (res == JFileChooser.APPROVE_OPTION) {
            File fileToSave = fileChooser.getSelectedFile();
            if (fileToSave.exists() && !fileToSave.isDirectory()) {
                this.showMessage("Operation échouée", "Fichier existant", JOptionPane.WARNING_MESSAGE);
            } else {

                HashMap<String, String> operationResult = SymetricGenKey.genKey(chosenAlgorithm, Integer.parseInt(bitsLength), fileToSave.getAbsolutePath());
                Map.Entry<String, String> entry = operationResult.entrySet().iterator().next();
                String encodedKey = entry.getKey();
                String message = entry.getValue();

                if (message.equals("SUCCESSFUL")) {
                    this.showMessage("Operation réussie", "Clé generée", JOptionPane.INFORMATION_MESSAGE);
                    this.jButton4.setEnabled(true);
                    this.jTextField1.setText(encodedKey);

                } else {
                    this.showMessage("Operation échouée", message, JOptionPane.WARNING_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    public void showMessage(String title, String message, int messageType) {
        JOptionPane.showMessageDialog(this,
                message,
                title,
                messageType);
    }

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        this.jTextField1.setVisible(!this.jTextField1.isVisible());
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jTextField1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField1MouseClicked
        this.writeToClipboard(this.jTextField1.getText(), null, "La clé est copié dans le presse papier");       // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1MouseClicked

    private void JRetourActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JRetourActionPerformed
        CardLayout cl = (CardLayout) (this.jPanel1.getLayout());

        cl.show(this.jPanel1, "card4");
    }//GEN-LAST:event_JRetourActionPerformed

    private void JRetour1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JRetour1ActionPerformed
        this.JRetourActionPerformed(evt);
    }//GEN-LAST:event_JRetour1ActionPerformed

    private void JRadioRSAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JRadioRSAActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JRadioRSAActionPerformed

    private void JRadioDSAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JRadioDSAActionPerformed
        this.jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(this.DSAKeySize));
        this.JRadioDSA.setSelected(true);
        this.JRadioRSA.setSelected(false);
    }//GEN-LAST:event_JRadioDSAActionPerformed

    private void jButtonAsyncGenKeyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAsyncGenKeyActionPerformed
        String chosenAlgorithm;
        if (this.JRadioRSA.isSelected()) {
            chosenAlgorithm = "RSA";
        } else {
            chosenAlgorithm = "DSA";
        }
        String bitsLength = this.jComboBox2.getSelectedItem().toString();
        int res = fileChooser.showSaveDialog(this);
        if (res == JFileChooser.APPROVE_OPTION) {
            File fileToSave = fileChooser.getSelectedFile();
            if (fileToSave.exists() && !fileToSave.isDirectory()) {
                this.showMessage("Operation échouée", "Fichier existant", JOptionPane.WARNING_MESSAGE);
            } else {

                String operationResult = AsymetricGenKey.genKey(chosenAlgorithm, fileToSave.getAbsolutePath(), Integer.parseInt(bitsLength));

                if (operationResult.equals("SUCCESSFUL")) {
                    this.showMessage("Operation réussie", "Paire de clé generée", JOptionPane.INFORMATION_MESSAGE);

                } else {
                    this.showMessage("Operation échouée", operationResult, JOptionPane.WARNING_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_jButtonAsyncGenKeyActionPerformed

    private void jRadioSyncActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioSyncActionPerformed
        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(this.symetricCiphersAlgorithm));
    }//GEN-LAST:event_jRadioSyncActionPerformed

    private void jRadioDSync1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioDSync1ActionPerformed
        jComboBox4.setModel(new javax.swing.DefaultComboBoxModel<>(this.symetricCiphersAlgorithm));
    }//GEN-LAST:event_jRadioDSync1ActionPerformed

    private void jButtonCipherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCipherActionPerformed
        SecretKey sk = null;
        RSAPublicKey sPub = null;
        if (!this.jRadioAsync.isSelected() && !this.jRadioSync.isSelected()) {
            this.showMessage("Erreur", "Veuillez choisir un type de chiffrement", JOptionPane.WARNING_MESSAGE);
        } else {
            String selectedAlgorithm = jComboBox3.getSelectedItem().toString();
            if (this.jRadioFichier.isSelected()) {
                if (null != this.filePathKey) {
                    HashMap<String, SecretKey> resultKey = null;
                    HashMap<String, RSAPublicKey> asyResultKey = null;
                    String opResult = null;
                    if (this.jRadioSync.isSelected()) {
                        resultKey = SymetricGenKey.getKey(this.filePathKey);
                        Map.Entry<String, SecretKey> entry = resultKey.entrySet().iterator().next();
                        opResult = entry.getKey();
                        sk = entry.getValue();
                    } else {
                        asyResultKey = AsymetricGenKey.getPublicKey(this.filePathKey);
                        Map.Entry<String, RSAPublicKey> entry = asyResultKey.entrySet().iterator().next();
                        opResult = entry.getKey();
                        sPub = entry.getValue();
                    }
                    if (opResult.equals("SUCCESSFUL")) {

                        if (null != this.filePathText) {
                            int res = fileChooser.showSaveDialog(this);
                            if (res != JFileChooser.APPROVE_OPTION) {
                                this.showMessage("Erreur", "Veuillez choisir le fichier de sortie", JOptionPane.WARNING_MESSAGE);
                            } else {
                                File fileToSave = fileChooser.getSelectedFile();
                                String fileOuput = fileToSave.getAbsolutePath();
                                HashMap<String, String> result = null;
                                if (this.jRadioSync.isSelected()) {
                                    result = SymetricCipher.crypt(this.filePathText, fileOuput, sk, selectedAlgorithm);
                                } else {
                                    result = AsymetricCipher.crypt(this.filePathText, fileOuput, sPub, selectedAlgorithm);
                                }
                                Map.Entry<String, String> entry2 = result.entrySet().iterator().next();
                                String opResult2 = entry2.getKey();

                                if (opResult2.equals("SUCCESSFUL")) {
                                    this.showMessage("Operation reussie", "Chiffrement terminé", JOptionPane.INFORMATION_MESSAGE);
                                    String cipherContent = entry2.getValue();
                                    this.jTextArea4.setText(cipherContent);
                                }

                            }
                        } else {
                            this.showMessage("Erreur", "Veuillez choisir le fichier que vous voulez chiffrer", JOptionPane.WARNING_MESSAGE);
                        }
                    } else {
                        this.showMessage("Erreur", opResult, JOptionPane.WARNING_MESSAGE);
                    }
                }

            } else {
                String text = this.jTextArea1.getText();
                String key = this.jTextArea2.getText();
                if (text.isEmpty() && key.isEmpty()) {
                    this.showMessage("Erreurs", "- Texte vide \n - Clé introuvable", HEIGHT);
                } else if (!text.isEmpty() && key.isEmpty()) {
                    this.showMessage("Erreurs", "Clé introuvable", HEIGHT);

                } else if (text.isEmpty() && !key.isEmpty()) {
                    this.showMessage("Erreurs", "- Texte vide", HEIGHT);
                } else {
                    HashMap<String, String> result = null;

                    if (this.jRadioSync.isSelected()) {
                        result = SymetricCipher.cryptorDecryptString(text, key, selectedAlgorithm, 1);
                    } else {
                        result = AsymetricCipher.cryptString(text, key, selectedAlgorithm);
                    }
                    Map.Entry<String, String> entry = result.entrySet().iterator().next();
                    String opResult = entry.getKey();

                    if (opResult.equals("SUCCESSFUL")) {
                        this.showMessage("Operation reussie", "Chiffrement terminé", JOptionPane.INFORMATION_MESSAGE);
                        String cipherContent = entry.getValue();
                        this.jTextArea4.setText(cipherContent);

                    }

                }

            }

        }
        //  HashMap<String, String> result=SymetricCipher.crypt(this.filePathText,this.filePathText+"1\\"+"a" ,sk,"AES");
    }//GEN-LAST:event_jButtonCipherActionPerformed

    private void jButtonDecryptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDecryptActionPerformed
        SecretKey sk = null;
        RSAPrivateKey sPriv = null;
        if (!this.jRadioDAsync1.isSelected() && !this.jRadioDSync1.isSelected()) {
            this.showMessage("Erreur", "Veuillez choisir un type de chiffrement", JOptionPane.WARNING_MESSAGE);
        } else {
            String selectedAlgorithm = jComboBox4.getSelectedItem().toString();
            if (this.jRadioFichier1.isSelected()) {
                if (null != this.filePathKey) {
                    HashMap<String, SecretKey> resultKey = null;
                    HashMap<String, RSAPrivateKey> asyResultKey = null;
                    String opResult = null;
                    if (this.jRadioDSync1.isSelected()) {
                        resultKey = SymetricGenKey.getKey(this.filePathKey);
                        Map.Entry<String, SecretKey> entry = resultKey.entrySet().iterator().next();
                        opResult = entry.getKey();
                        sk = entry.getValue();
                    } else {
                        asyResultKey = AsymetricGenKey.getPrivateKey(this.filePathKey);
                        Map.Entry<String, RSAPrivateKey> entry = asyResultKey.entrySet().iterator().next();
                        opResult = entry.getKey();
                        sPriv = entry.getValue();
                    }
                    if (opResult.equals("SUCCESSFUL")) {

                        if (null != this.filePathText) {
                            int res = fileChooser.showSaveDialog(this);
                            if (res != JFileChooser.APPROVE_OPTION) {
                                this.showMessage("Erreur", "Veuillez choisir le fichier de sortie", JOptionPane.WARNING_MESSAGE);
                            } else {
                                File fileToSave = fileChooser.getSelectedFile();
                                String fileOuput = fileToSave.getAbsolutePath();
                                HashMap<String, String> result = null;
                                if (this.jRadioDSync1.isSelected()) {
                                    result = SymetricCipher.decrypt(this.filePathText, fileOuput, sk, selectedAlgorithm);
                                } else {
                                    result = AsymetricCipher.decrypt(this.filePathText, fileOuput, sPriv, selectedAlgorithm);
                                }
                                Map.Entry<String, String> entry2 = result.entrySet().iterator().next();
                                String opResult2 = entry2.getKey();

                                if (opResult2.equals("SUCCESSFUL")) {
                                    this.showMessage("Operation reussie", "Dechiffrement terminé", JOptionPane.INFORMATION_MESSAGE);
                                    String cipherContent = entry2.getValue();
                                    this.jTextArea6.setText(cipherContent);
                                }

                            }
                        } else {
                            this.showMessage("Erreur", "Veuillez choisir le fichier que vous voulez chiffrer", JOptionPane.WARNING_MESSAGE);
                        }
                    } else {
                        this.showMessage("Erreur", opResult, JOptionPane.WARNING_MESSAGE);
                    }
                }

            } else {
                String text = this.jTextArea3.getText();
                String key = this.jTextArea5.getText();
                if (text.isEmpty() && key.isEmpty()) {
                    this.showMessage("Erreurs", "- Texte vide \n - Clé introuvable", JOptionPane.WARNING_MESSAGE);
                } else if (!text.isEmpty() && key.isEmpty()) {
                    this.showMessage("Erreurs", "Clé introuvable", JOptionPane.WARNING_MESSAGE);

                } else if (text.isEmpty() && !key.isEmpty()) {
                    this.showMessage("Erreurs", "- Texte vide", JOptionPane.WARNING_MESSAGE);
                } else {
                    HashMap<String, String> result = null;

                    if (this.jRadioDSync1.isSelected()) {
                        result = SymetricCipher.cryptorDecryptString(text, key, selectedAlgorithm, 2);
                    } else {
                        result = AsymetricCipher.decryptString(text, key, selectedAlgorithm);
                    }
                    Map.Entry<String, String> entry = result.entrySet().iterator().next();
                    String opResult = entry.getKey();

                    if (opResult.equals("SUCCESSFUL")) {
                        this.showMessage("Operation reussie", "Chiffrement terminé", JOptionPane.INFORMATION_MESSAGE);
                        String cipherContent = entry.getValue();
                        this.jTextArea6.setText(cipherContent);

                    }

                }

            }

        }

    }//GEN-LAST:event_jButtonDecryptActionPerformed

    private void jRadioAsyncActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioAsyncActionPerformed
        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(this.asymetricCiphersAlgorithm));
    }//GEN-LAST:event_jRadioAsyncActionPerformed

    private void jRadioDAsync1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioDAsync1ActionPerformed
        jComboBox4.setModel(new javax.swing.DefaultComboBoxModel<>(this.asymetricCiphersAlgorithm));
    }//GEN-LAST:event_jRadioDAsync1ActionPerformed

    private void jButtonUpload1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUpload1ActionPerformed
        int res = fileChooser.showSaveDialog(this);
        if (res == JFileChooser.APPROVE_OPTION) {
            File fileToSave = fileChooser.getSelectedFile();
            this.filePathText = fileToSave.getAbsolutePath();
        }

    }//GEN-LAST:event_jButtonUpload1ActionPerformed

    private void jButtonUploadKeyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUploadKeyActionPerformed
        int res = fileChooser.showSaveDialog(this);
        if (res == JFileChooser.APPROVE_OPTION) {
            File fileToSave = fileChooser.getSelectedFile();
            this.filePathKey = fileToSave.getAbsolutePath();
        }

    }//GEN-LAST:event_jButtonUploadKeyActionPerformed

    private void jTextArea1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextArea1KeyPressed

    }//GEN-LAST:event_jTextArea1KeyPressed

    private void jTextArea3KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextArea3KeyPressed

    }//GEN-LAST:event_jTextArea3KeyPressed

    private void jTextArea2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextArea2MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextArea2MouseClicked

    private void jTextArea5KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextArea5KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextArea5KeyPressed

    private void jTextArea5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextArea5MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextArea5MouseClicked

    private void jTextArea2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextArea2KeyPressed

    }//GEN-LAST:event_jTextArea2KeyPressed

    private void jButtonUpload2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUpload2ActionPerformed
        int res = fileChooser.showSaveDialog(this);
        if (res == JFileChooser.APPROVE_OPTION) {
            File fileToSave = fileChooser.getSelectedFile();
            this.filePathText = fileToSave.getAbsolutePath();
        }
    }//GEN-LAST:event_jButtonUpload2ActionPerformed

    private void jButtonUploadKey2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUploadKey2ActionPerformed
        int res = fileChooser.showSaveDialog(this);
        if (res == JFileChooser.APPROVE_OPTION) {
            File fileToSave = fileChooser.getSelectedFile();
            this.filePathKey = fileToSave.getAbsolutePath();
        }
    }//GEN-LAST:event_jButtonUploadKey2ActionPerformed

    private void jRadioFichierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioFichierActionPerformed
        this.jTextArea1.setVisible(false);
        this.jTextArea2.setVisible(false);
        this.jButtonUpload1.setEnabled(true);
        this.jButtonUploadKey.setEnabled(true);

    }//GEN-LAST:event_jRadioFichierActionPerformed

    private void jRadioTexteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioTexteActionPerformed
        this.jTextArea1.setVisible(true);
        this.jTextArea2.setVisible(true);
        this.jButtonUpload1.setEnabled(false);
        this.jButtonUploadKey.setEnabled(false);

    }//GEN-LAST:event_jRadioTexteActionPerformed

    private void jRadioTexte1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioTexte1ActionPerformed
        this.jTextArea3.setVisible(true);
        this.jTextArea5.setVisible(true);
        this.jButtonUpload2.setEnabled(false);
        this.jButtonUploadKey2.setEnabled(false);
    }//GEN-LAST:event_jRadioTexte1ActionPerformed

    private void jRadioFichier1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioFichier1ActionPerformed
        this.jTextArea3.setVisible(false);
        this.jTextArea5.setVisible(false);
        this.jButtonUpload2.setEnabled(true);
        this.jButtonUploadKey2.setEnabled(true);
    }//GEN-LAST:event_jRadioFichier1ActionPerformed

    private void jTextArea4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextArea4MouseClicked
        this.writeToClipboard(this.jTextArea4.getText(), null, "Texte chiffré copié dans le presse-papier");        // TODO add your handling code here:
    }//GEN-LAST:event_jTextArea4MouseClicked

    private void jTextArea6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextArea6MouseClicked
        this.writeToClipboard(this.jTextArea6.getText(), null, "Texte dechiffré copié dans le presse-papier");
    }//GEN-LAST:event_jTextArea6MouseClicked

    public void writeToClipboard(String s, ClipboardOwner owner, String mess) {
        if (s == null) {
            Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
            Transferable transferable = new StringSelection(s);
            clipboard.setContents(transferable, owner);
            this.showMessage("Operation de copie reussie", mess, JOptionPane.INFORMATION_MESSAGE);
        } else {
            this.showMessage("Operation de copie reussie", "Aucun contenu dans la zone de texte", JOptionPane.INFORMATION_MESSAGE);
        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Home().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton JRadioAES;
    private javax.swing.JRadioButton JRadioDES;
    private javax.swing.JRadioButton JRadioDSA;
    private javax.swing.JRadioButton JRadioRSA;
    private javax.swing.JButton JRetour;
    private javax.swing.JButton JRetour1;
    private javax.swing.JPanel aSyncGenKey;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup4;
    private javax.swing.ButtonGroup buttonGroup5;
    private javax.swing.ButtonGroup buttonGroup6;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButtonAsyncGenKey;
    private javax.swing.JButton jButtonCipher;
    private javax.swing.JButton jButtonDecrypt;
    private javax.swing.JButton jButtonUpload1;
    private javax.swing.JButton jButtonUpload2;
    private javax.swing.JButton jButtonUploadKey;
    private javax.swing.JButton jButtonUploadKey2;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JComboBox<String> jComboBox4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel24;
    private javax.swing.JPanel jPanel25;
    private javax.swing.JPanel jPanel26;
    private javax.swing.JPanel jPanel27;
    private javax.swing.JPanel jPanel28;
    private javax.swing.JPanel jPanel29;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel30;
    private javax.swing.JPanel jPanel31;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JRadioButton jRadioAsync;
    private javax.swing.JRadioButton jRadioDAsync1;
    private javax.swing.JRadioButton jRadioDSync1;
    private javax.swing.JRadioButton jRadioFichier;
    private javax.swing.JRadioButton jRadioFichier1;
    private javax.swing.JRadioButton jRadioSync;
    private javax.swing.JRadioButton jRadioTexte;
    private javax.swing.JRadioButton jRadioTexte1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextArea jTextArea3;
    private javax.swing.JTextArea jTextArea4;
    private javax.swing.JTextArea jTextArea5;
    private javax.swing.JTextArea jTextArea6;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
    private String[] DSAKeySize;
    private static String[] symetricCiphersAlgorithm = {"AES", "DES"};
    private static String[] asymetricCiphersAlgorithm = {"RSA"};
    private javax.swing.JFileChooser fileChooser;
    private String filePathKey;
    private String filePathText;

    class SpacedTabbedPaneUI extends BasicTabbedPaneUI {

        @Override
        protected LayoutManager createLayoutManager() {
            return new BasicTabbedPaneUI.TabbedPaneLayout() {
                @Override
                protected void calculateTabRects(int tabPlacement, int tabCount) {
                    final int spacer = 20; // should be non-negative
                    final int indent = 4;

                    super.calculateTabRects(tabPlacement, tabCount);

                    for (int i = 0; i < rects.length; i++) {
                        rects[i].x += i * spacer + indent;
                    }
                }
            };
        }
    }
}
